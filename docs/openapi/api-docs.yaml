openapi: 3.1.0
info:
  title: Repo-Manager API
  version: 1.0.0
tags:
  - name: user
    description: User operations
  - name: gitUser
    description: GitUser operations
  - name: gitGroup
    description: GitGroup operations
  - name: gitUserGroup
    description: GitUserGroup operations
  - name: gitUserOwner
    description: GitUserOwner operations
  - name: gitGroupOwner
    description: GitGroupOwner operations
  - name: notification
    description: Notification operations
  - name: groupInviteToken
    description: GroupInviteToken operations
  - name: groupInviteTokenGroups
    description: GroupInviteTokenGroups operations
paths:
  /api/data/user:
    get:
      operationId: list-User
      description: List "User" resources
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User
      description: Create a "User" resource
      tags:
        - user
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}:
    get:
      operationId: fetch-User
      description: Fetch a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-put
      description: Update a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-patch
      description: Update a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-User
      description: Delete a "User" resource
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/Notifications:
    get:
      operationId: fetch-User-related-Notifications
      description: Fetch the related "Notifications" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/NotificationListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/relationships/Notifications:
    get:
      operationId: fetch-User-relationship-Notifications
      description: Fetch the "Notifications" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-Notifications-put
      description: Update "Notifications" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-Notifications-patch
      description: Update "Notifications" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-Notifications
      description: Create new "Notifications" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/GroupInviteTokens:
    get:
      operationId: fetch-User-related-GroupInviteTokens
      description: Fetch the related "GroupInviteTokens" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/relationships/GroupInviteTokens:
    get:
      operationId: fetch-User-relationship-GroupInviteTokens
      description: Fetch the "GroupInviteTokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-GroupInviteTokens-put
      description: Update "GroupInviteTokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-GroupInviteTokens-patch
      description: Update "GroupInviteTokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-GroupInviteTokens
      description: Create new "GroupInviteTokens" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/ownedGitUsers:
    get:
      operationId: fetch-User-related-ownedGitUsers
      description: Fetch the related "ownedGitUsers" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserOwnerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/relationships/ownedGitUsers:
    get:
      operationId: fetch-User-relationship-ownedGitUsers
      description: Fetch the "ownedGitUsers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-ownedGitUsers-put
      description: Update "ownedGitUsers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-ownedGitUsers-patch
      description: Update "ownedGitUsers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-ownedGitUsers
      description: Create new "ownedGitUsers" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/ownedGitGroups:
    get:
      operationId: fetch-User-related-ownedGitGroups
      description: Fetch the related "ownedGitGroups" resource for "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupOwnerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/user/{id}/relationships/ownedGitGroups:
    get:
      operationId: fetch-User-relationship-ownedGitGroups
      description: Fetch the "ownedGitGroups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[Notifications]
          required: false
          description: Equality filter for "Notifications"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitUsers]
          required: false
          description: Equality filter for "ownedGitUsers"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[ownedGitGroups]
          required: false
          description: Equality filter for "ownedGitGroups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-User-relationship-ownedGitGroups-put
      description: Update "ownedGitGroups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-User-relationship-ownedGitGroups-patch
      description: Update "ownedGitGroups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-User-relationship-ownedGitGroups
      description: Create new "ownedGitGroups" relationships for a "User"
      tags:
        - user
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUser:
    get:
      operationId: list-GitUser
      description: List "GitUser" resources
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[repoState]
          required: false
          description: Equality filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lt]
          required: false
          description: Less-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lte]
          required: false
          description: Less-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gt]
          required: false
          description: Greater-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gte]
          required: false
          description: Greater-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[custom]
          required: false
          description: Equality filter for "custom"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitUser
      description: Create a "GitUser" resource
      tags:
        - gitUser
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUser/{id}:
    get:
      operationId: fetch-GitUser
      description: Fetch a "GitUser" resource
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUser-put
      description: Update a "GitUser" resource
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUser-patch
      description: Update a "GitUser" resource
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-GitUser
      description: Delete a "GitUser" resource
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUser/{id}/groups:
    get:
      operationId: fetch-GitUser-related-groups
      description: Fetch the related "groups" resource for "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[repoState]
          required: false
          description: Equality filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lt]
          required: false
          description: Less-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lte]
          required: false
          description: Less-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gt]
          required: false
          description: Greater-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gte]
          required: false
          description: Greater-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[custom]
          required: false
          description: Equality filter for "custom"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserGroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUser/{id}/relationships/groups:
    get:
      operationId: fetch-GitUser-relationship-groups
      description: Fetch the "groups" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[repoState]
          required: false
          description: Equality filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lt]
          required: false
          description: Less-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lte]
          required: false
          description: Less-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gt]
          required: false
          description: Greater-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gte]
          required: false
          description: Greater-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[custom]
          required: false
          description: Equality filter for "custom"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUser-relationship-groups-put
      description: Update "groups" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUser-relationship-groups-patch
      description: Update "groups" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitUser-relationship-groups
      description: Create new "groups" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUser/{id}/owners:
    get:
      operationId: fetch-GitUser-related-owners
      description: Fetch the related "owners" resource for "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[repoState]
          required: false
          description: Equality filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lt]
          required: false
          description: Less-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lte]
          required: false
          description: Less-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gt]
          required: false
          description: Greater-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gte]
          required: false
          description: Greater-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[custom]
          required: false
          description: Equality filter for "custom"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserOwnerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUser/{id}/relationships/owners:
    get:
      operationId: fetch-GitUser-relationship-owners
      description: Fetch the "owners" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[git_access_token]
          required: false
          description: Equality filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$contains]
          required: false
          description: String contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$icontains]
          required: false
          description: String case-insensitive contains filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$search]
          required: false
          description: String full-text search filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$startsWith]
          required: false
          description: String startsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[git_access_token$endsWith]
          required: false
          description: String endsWith filter for "git_access_token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email]
          required: false
          description: Equality filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$contains]
          required: false
          description: String contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$icontains]
          required: false
          description: String case-insensitive contains filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$search]
          required: false
          description: String full-text search filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$startsWith]
          required: false
          description: String startsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[email$endsWith]
          required: false
          description: String endsWith filter for "email"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username]
          required: false
          description: Equality filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$contains]
          required: false
          description: String contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$icontains]
          required: false
          description: String case-insensitive contains filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$search]
          required: false
          description: String full-text search filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$startsWith]
          required: false
          description: String startsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[username$endsWith]
          required: false
          description: String endsWith filter for "username"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[repoState]
          required: false
          description: Equality filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lt]
          required: false
          description: Less-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lte]
          required: false
          description: Less-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gt]
          required: false
          description: Greater-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gte]
          required: false
          description: Greater-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[avatar_url]
          required: false
          description: Equality filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$contains]
          required: false
          description: String contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$icontains]
          required: false
          description: String case-insensitive contains filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$search]
          required: false
          description: String full-text search filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$startsWith]
          required: false
          description: String startsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[avatar_url$endsWith]
          required: false
          description: String endsWith filter for "avatar_url"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[custom]
          required: false
          description: Equality filter for "custom"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUser-relationship-owners-put
      description: Update "owners" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUser-relationship-owners-patch
      description: Update "owners" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitUser-relationship-owners
      description: Create new "owners" relationships for a "GitUser"
      tags:
        - gitUser
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup:
    get:
      operationId: list-GitGroup
      description: List "GitGroup" resources
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[deleteUsers]
          required: false
          description: Equality filter for "deleteUsers"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[deleteSelf]
          required: false
          description: Equality filter for "deleteSelf"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[repoOwner]
          required: false
          description: Equality filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$contains]
          required: false
          description: String contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$icontains]
          required: false
          description: String case-insensitive contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$search]
          required: false
          description: String full-text search filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$startsWith]
          required: false
          description: String startsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$endsWith]
          required: false
          description: String endsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName]
          required: false
          description: Equality filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$contains]
          required: false
          description: String contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$icontains]
          required: false
          description: String case-insensitive contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$search]
          required: false
          description: String full-text search filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$startsWith]
          required: false
          description: String startsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$endsWith]
          required: false
          description: String endsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[users]
          required: false
          description: Equality filter for "users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitGroup
      description: Create a "GitGroup" resource
      tags:
        - gitGroup
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitGroupCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup/{id}:
    get:
      operationId: fetch-GitGroup
      description: Fetch a "GitGroup" resource
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitGroup-put
      description: Update a "GitGroup" resource
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitGroupUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitGroup-patch
      description: Update a "GitGroup" resource
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitGroupUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-GitGroup
      description: Delete a "GitGroup" resource
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup/{id}/GroupInviteTokens:
    get:
      operationId: fetch-GitGroup-related-GroupInviteTokens
      description: Fetch the related "GroupInviteTokens" resource for "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[deleteUsers]
          required: false
          description: Equality filter for "deleteUsers"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[deleteSelf]
          required: false
          description: Equality filter for "deleteSelf"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[repoOwner]
          required: false
          description: Equality filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$contains]
          required: false
          description: String contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$icontains]
          required: false
          description: String case-insensitive contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$search]
          required: false
          description: String full-text search filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$startsWith]
          required: false
          description: String startsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$endsWith]
          required: false
          description: String endsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName]
          required: false
          description: Equality filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$contains]
          required: false
          description: String contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$icontains]
          required: false
          description: String case-insensitive contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$search]
          required: false
          description: String full-text search filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$startsWith]
          required: false
          description: String startsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$endsWith]
          required: false
          description: String endsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[users]
          required: false
          description: Equality filter for "users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenGroupsListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup/{id}/relationships/GroupInviteTokens:
    get:
      operationId: fetch-GitGroup-relationship-GroupInviteTokens
      description: Fetch the "GroupInviteTokens" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[deleteUsers]
          required: false
          description: Equality filter for "deleteUsers"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[deleteSelf]
          required: false
          description: Equality filter for "deleteSelf"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[repoOwner]
          required: false
          description: Equality filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$contains]
          required: false
          description: String contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$icontains]
          required: false
          description: String case-insensitive contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$search]
          required: false
          description: String full-text search filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$startsWith]
          required: false
          description: String startsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$endsWith]
          required: false
          description: String endsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName]
          required: false
          description: Equality filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$contains]
          required: false
          description: String contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$icontains]
          required: false
          description: String case-insensitive contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$search]
          required: false
          description: String full-text search filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$startsWith]
          required: false
          description: String startsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$endsWith]
          required: false
          description: String endsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[users]
          required: false
          description: Equality filter for "users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitGroup-relationship-GroupInviteTokens-put
      description: Update "GroupInviteTokens" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitGroup-relationship-GroupInviteTokens-patch
      description: Update "GroupInviteTokens" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitGroup-relationship-GroupInviteTokens
      description: Create new "GroupInviteTokens" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup/{id}/users:
    get:
      operationId: fetch-GitGroup-related-users
      description: Fetch the related "users" resource for "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[deleteUsers]
          required: false
          description: Equality filter for "deleteUsers"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[deleteSelf]
          required: false
          description: Equality filter for "deleteSelf"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[repoOwner]
          required: false
          description: Equality filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$contains]
          required: false
          description: String contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$icontains]
          required: false
          description: String case-insensitive contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$search]
          required: false
          description: String full-text search filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$startsWith]
          required: false
          description: String startsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$endsWith]
          required: false
          description: String endsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName]
          required: false
          description: Equality filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$contains]
          required: false
          description: String contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$icontains]
          required: false
          description: String case-insensitive contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$search]
          required: false
          description: String full-text search filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$startsWith]
          required: false
          description: String startsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$endsWith]
          required: false
          description: String endsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[users]
          required: false
          description: Equality filter for "users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserGroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup/{id}/relationships/users:
    get:
      operationId: fetch-GitGroup-relationship-users
      description: Fetch the "users" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[deleteUsers]
          required: false
          description: Equality filter for "deleteUsers"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[deleteSelf]
          required: false
          description: Equality filter for "deleteSelf"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[repoOwner]
          required: false
          description: Equality filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$contains]
          required: false
          description: String contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$icontains]
          required: false
          description: String case-insensitive contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$search]
          required: false
          description: String full-text search filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$startsWith]
          required: false
          description: String startsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$endsWith]
          required: false
          description: String endsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName]
          required: false
          description: Equality filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$contains]
          required: false
          description: String contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$icontains]
          required: false
          description: String case-insensitive contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$search]
          required: false
          description: String full-text search filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$startsWith]
          required: false
          description: String startsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$endsWith]
          required: false
          description: String endsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[users]
          required: false
          description: Equality filter for "users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitGroup-relationship-users-put
      description: Update "users" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitGroup-relationship-users-patch
      description: Update "users" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitGroup-relationship-users
      description: Create new "users" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup/{id}/owners:
    get:
      operationId: fetch-GitGroup-related-owners
      description: Fetch the related "owners" resource for "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[deleteUsers]
          required: false
          description: Equality filter for "deleteUsers"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[deleteSelf]
          required: false
          description: Equality filter for "deleteSelf"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[repoOwner]
          required: false
          description: Equality filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$contains]
          required: false
          description: String contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$icontains]
          required: false
          description: String case-insensitive contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$search]
          required: false
          description: String full-text search filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$startsWith]
          required: false
          description: String startsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$endsWith]
          required: false
          description: String endsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName]
          required: false
          description: Equality filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$contains]
          required: false
          description: String contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$icontains]
          required: false
          description: String case-insensitive contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$search]
          required: false
          description: String full-text search filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$startsWith]
          required: false
          description: String startsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$endsWith]
          required: false
          description: String endsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[users]
          required: false
          description: Equality filter for "users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupOwnerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroup/{id}/relationships/owners:
    get:
      operationId: fetch-GitGroup-relationship-owners
      description: Fetch the "owners" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[expires]
          required: false
          description: Equality filter for "expires"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[deleteUsers]
          required: false
          description: Equality filter for "deleteUsers"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[deleteSelf]
          required: false
          description: Equality filter for "deleteSelf"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[repoOwner]
          required: false
          description: Equality filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$contains]
          required: false
          description: String contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$icontains]
          required: false
          description: String case-insensitive contains filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$search]
          required: false
          description: String full-text search filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$startsWith]
          required: false
          description: String startsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoOwner$endsWith]
          required: false
          description: String endsWith filter for "repoOwner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName]
          required: false
          description: Equality filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$contains]
          required: false
          description: String contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$icontains]
          required: false
          description: String case-insensitive contains filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$search]
          required: false
          description: String full-text search filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$startsWith]
          required: false
          description: String startsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[repoName$endsWith]
          required: false
          description: String endsWith filter for "repoName"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[GroupInviteTokens]
          required: false
          description: Equality filter for "GroupInviteTokens"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[users]
          required: false
          description: Equality filter for "users"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: filter[owners]
          required: false
          description: Equality filter for "owners"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitGroup-relationship-owners-put
      description: Update "owners" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitGroup-relationship-owners-patch
      description: Update "owners" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitGroup-relationship-owners
      description: Create new "owners" relationships for a "GitGroup"
      tags:
        - gitGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserGroup:
    get:
      operationId: list-GitUserGroup
      description: List "GitUserGroup" resources
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[repoState]
          required: false
          description: Equality filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lt]
          required: false
          description: Less-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$lte]
          required: false
          description: Less-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gt]
          required: false
          description: Greater-than filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[repoState$gte]
          required: false
          description: Greater-than or equal filter for "repoState"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[user]
          required: false
          description: Equality filter for "user"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[group]
          required: false
          description: Equality filter for "group"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserGroupListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitUserGroup
      description: Create a "GitUserGroup" resource
      tags:
        - gitUserGroup
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserGroupCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserGroup/{id}:
    get:
      operationId: fetch-GitUserGroup
      description: Fetch a "GitUserGroup" resource
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUserGroup-put
      description: Update a "GitUserGroup" resource
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserGroupUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUserGroup-patch
      description: Update a "GitUserGroup" resource
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserGroupUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-GitUserGroup
      description: Delete a "GitUserGroup" resource
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserGroup/{id}/user:
    get:
      operationId: fetch-GitUserGroup-related-user
      description: Fetch the related "user" resource for "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserGroup/{id}/relationships/user:
    get:
      operationId: fetch-GitUserGroup-relationship-user
      description: Fetch the "user" relationships for a "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUserGroup-relationship-user-put
      description: Update "user" relationship for a "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUserGroup-relationship-user-patch
      description: Update "user" relationship for a "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserGroup/{id}/group:
    get:
      operationId: fetch-GitUserGroup-related-group
      description: Fetch the related "group" resource for "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserGroup/{id}/relationships/group:
    get:
      operationId: fetch-GitUserGroup-relationship-group
      description: Fetch the "group" relationships for a "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUserGroup-relationship-group-put
      description: Update "group" relationship for a "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUserGroup-relationship-group-patch
      description: Update "group" relationship for a "GitUserGroup"
      tags:
        - gitUserGroup
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserOwner:
    get:
      operationId: list-GitUserOwner
      description: List "GitUserOwner" resources
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[gitUser]
          required: false
          description: Equality filter for "gitUser"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserOwnerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitUserOwner
      description: Create a "GitUserOwner" resource
      tags:
        - gitUserOwner
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserOwnerCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserOwner/{id}:
    get:
      operationId: fetch-GitUserOwner
      description: Fetch a "GitUserOwner" resource
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUserOwner-put
      description: Update a "GitUserOwner" resource
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserOwnerUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUserOwner-patch
      description: Update a "GitUserOwner" resource
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitUserOwnerUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-GitUserOwner
      description: Delete a "GitUserOwner" resource
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserOwner/{id}/owner:
    get:
      operationId: fetch-GitUserOwner-related-owner
      description: Fetch the related "owner" resource for "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserOwner/{id}/relationships/owner:
    get:
      operationId: fetch-GitUserOwner-relationship-owner
      description: Fetch the "owner" relationships for a "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUserOwner-relationship-owner-put
      description: Update "owner" relationship for a "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUserOwner-relationship-owner-patch
      description: Update "owner" relationship for a "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserOwner/{id}/gitUser:
    get:
      operationId: fetch-GitUserOwner-related-gitUser
      description: Fetch the related "gitUser" resource for "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitUserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitUserOwner/{id}/relationships/gitUser:
    get:
      operationId: fetch-GitUserOwner-relationship-gitUser
      description: Fetch the "gitUser" relationships for a "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitUserOwner-relationship-gitUser-put
      description: Update "gitUser" relationship for a "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitUserOwner-relationship-gitUser-patch
      description: Update "gitUser" relationship for a "GitUserOwner"
      tags:
        - gitUserOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroupOwner:
    get:
      operationId: list-GitGroupOwner
      description: List "GitGroupOwner" resources
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[group]
          required: false
          description: Equality filter for "group"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupOwnerListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GitGroupOwner
      description: Create a "GitGroupOwner" resource
      tags:
        - gitGroupOwner
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitGroupOwnerCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroupOwner/{id}:
    get:
      operationId: fetch-GitGroupOwner
      description: Fetch a "GitGroupOwner" resource
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitGroupOwner-put
      description: Update a "GitGroupOwner" resource
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitGroupOwnerUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitGroupOwner-patch
      description: Update a "GitGroupOwner" resource
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GitGroupOwnerUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupOwnerResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-GitGroupOwner
      description: Delete a "GitGroupOwner" resource
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroupOwner/{id}/owner:
    get:
      operationId: fetch-GitGroupOwner-related-owner
      description: Fetch the related "owner" resource for "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroupOwner/{id}/relationships/owner:
    get:
      operationId: fetch-GitGroupOwner-relationship-owner
      description: Fetch the "owner" relationships for a "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitGroupOwner-relationship-owner-put
      description: Update "owner" relationship for a "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitGroupOwner-relationship-owner-patch
      description: Update "owner" relationship for a "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroupOwner/{id}/group:
    get:
      operationId: fetch-GitGroupOwner-related-group
      description: Fetch the related "group" resource for "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/gitGroupOwner/{id}/relationships/group:
    get:
      operationId: fetch-GitGroupOwner-relationship-group
      description: Fetch the "group" relationships for a "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GitGroupOwner-relationship-group-put
      description: Update "group" relationship for a "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GitGroupOwner-relationship-group-patch
      description: Update "group" relationship for a "GitGroupOwner"
      tags:
        - gitGroupOwner
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/notification:
    get:
      operationId: list-Notification
      description: List "Notification" resources
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[title]
          required: false
          description: Equality filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$contains]
          required: false
          description: String contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$icontains]
          required: false
          description: String case-insensitive contains filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$search]
          required: false
          description: String full-text search filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$startsWith]
          required: false
          description: String startsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[title$endsWith]
          required: false
          description: String endsWith filter for "title"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content]
          required: false
          description: Equality filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$contains]
          required: false
          description: String contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$icontains]
          required: false
          description: String case-insensitive contains filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$search]
          required: false
          description: String full-text search filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$startsWith]
          required: false
          description: String startsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[content$endsWith]
          required: false
          description: String endsWith filter for "content"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[read]
          required: false
          description: Equality filter for "read"
          in: query
          style: form
          explode: false
          schema:
            type: boolean
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/NotificationListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-Notification
      description: Create a "Notification" resource
      tags:
        - notification
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/NotificationCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/notification/{id}:
    get:
      operationId: fetch-Notification
      description: Fetch a "Notification" resource
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Notification-put
      description: Update a "Notification" resource
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/NotificationUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Notification-patch
      description: Update a "Notification" resource
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/NotificationUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/NotificationResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-Notification
      description: Delete a "Notification" resource
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/notification/{id}/owner:
    get:
      operationId: fetch-Notification-related-owner
      description: Fetch the related "owner" resource for "Notification"
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/notification/{id}/relationships/owner:
    get:
      operationId: fetch-Notification-relationship-owner
      description: Fetch the "owner" relationships for a "Notification"
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-Notification-relationship-owner-put
      description: Update "owner" relationship for a "Notification"
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-Notification-relationship-owner-patch
      description: Update "owner" relationship for a "Notification"
      tags:
        - notification
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteToken:
    get:
      operationId: list-GroupInviteToken
      description: List "GroupInviteToken" resources
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[token]
          required: false
          description: Equality filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$contains]
          required: false
          description: String contains filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$icontains]
          required: false
          description: String case-insensitive contains filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$search]
          required: false
          description: String full-text search filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$startsWith]
          required: false
          description: String startsWith filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$endsWith]
          required: false
          description: String endsWith filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[used]
          required: false
          description: Equality filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$lt]
          required: false
          description: Less-than filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$lte]
          required: false
          description: Less-than or equal filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$gt]
          required: false
          description: Greater-than filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$gte]
          required: false
          description: Greater-than or equal filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse]
          required: false
          description: Equality filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$lt]
          required: false
          description: Less-than filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$lte]
          required: false
          description: Less-than or equal filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$gt]
          required: false
          description: Greater-than filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$gte]
          required: false
          description: Greater-than or equal filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GroupInviteToken
      description: Create a "GroupInviteToken" resource
      tags:
        - groupInviteToken
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupInviteTokenCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteToken/{id}:
    get:
      operationId: fetch-GroupInviteToken
      description: Fetch a "GroupInviteToken" resource
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GroupInviteToken-put
      description: Update a "GroupInviteToken" resource
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupInviteTokenUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GroupInviteToken-patch
      description: Update a "GroupInviteToken" resource
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupInviteTokenUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-GroupInviteToken
      description: Delete a "GroupInviteToken" resource
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteToken/{id}/owner:
    get:
      operationId: fetch-GroupInviteToken-related-owner
      description: Fetch the related "owner" resource for "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteToken/{id}/relationships/owner:
    get:
      operationId: fetch-GroupInviteToken-relationship-owner
      description: Fetch the "owner" relationships for a "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GroupInviteToken-relationship-owner-put
      description: Update "owner" relationship for a "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GroupInviteToken-relationship-owner-patch
      description: Update "owner" relationship for a "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteToken/{id}/groups:
    get:
      operationId: fetch-GroupInviteToken-related-groups
      description: Fetch the related "groups" resource for "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[token]
          required: false
          description: Equality filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$contains]
          required: false
          description: String contains filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$icontains]
          required: false
          description: String case-insensitive contains filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$search]
          required: false
          description: String full-text search filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$startsWith]
          required: false
          description: String startsWith filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$endsWith]
          required: false
          description: String endsWith filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[used]
          required: false
          description: Equality filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$lt]
          required: false
          description: Less-than filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$lte]
          required: false
          description: Less-than or equal filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$gt]
          required: false
          description: Greater-than filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$gte]
          required: false
          description: Greater-than or equal filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse]
          required: false
          description: Equality filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$lt]
          required: false
          description: Less-than filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$lte]
          required: false
          description: Less-than or equal filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$gt]
          required: false
          description: Greater-than filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$gte]
          required: false
          description: Greater-than or equal filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenGroupsListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteToken/{id}/relationships/groups:
    get:
      operationId: fetch-GroupInviteToken-relationship-groups
      description: Fetch the "groups" relationships for a "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[id]
          required: false
          description: Id filter
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[token]
          required: false
          description: Equality filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$contains]
          required: false
          description: String contains filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$icontains]
          required: false
          description: String case-insensitive contains filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$search]
          required: false
          description: String full-text search filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$startsWith]
          required: false
          description: String startsWith filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[token$endsWith]
          required: false
          description: String endsWith filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[used]
          required: false
          description: Equality filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$lt]
          required: false
          description: Less-than filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$lte]
          required: false
          description: Less-than or equal filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$gt]
          required: false
          description: Greater-than filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[used$gte]
          required: false
          description: Greater-than or equal filter for "used"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse]
          required: false
          description: Equality filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$lt]
          required: false
          description: Less-than filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$lte]
          required: false
          description: Less-than or equal filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$gt]
          required: false
          description: Greater-than filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[maxUse$gte]
          required: false
          description: Greater-than or equal filter for "maxUse"
          in: query
          style: form
          explode: false
          schema:
            type: integer
        - name: filter[owner]
          required: false
          description: Equality filter for "owner"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name]
          required: false
          description: Equality filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$contains]
          required: false
          description: String contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$icontains]
          required: false
          description: String case-insensitive contains filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$search]
          required: false
          description: String full-text search filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$startsWith]
          required: false
          description: String startsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[name$endsWith]
          required: false
          description: String endsWith filter for "name"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[expiryDate]
          required: false
          description: Equality filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lt]
          required: false
          description: Less-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$lte]
          required: false
          description: Less-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gt]
          required: false
          description: Greater-than filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[expiryDate$gte]
          required: false
          description: Greater-than or equal filter for "expiryDate"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created]
          required: false
          description: Equality filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lt]
          required: false
          description: Less-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$lte]
          required: false
          description: Less-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gt]
          required: false
          description: Greater-than filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[created$gte]
          required: false
          description: Greater-than or equal filter for "created"
          in: query
          style: form
          explode: false
          schema:
            type: string
            format: date-time
        - name: filter[groups]
          required: false
          description: Equality filter for "groups"
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GroupInviteToken-relationship-groups-put
      description: Update "groups" relationships for a "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GroupInviteToken-relationship-groups-patch
      description: Update "groups" relationships for a "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GroupInviteToken-relationship-groups
      description: Create new "groups" relationships for a "GroupInviteToken"
      tags:
        - groupInviteToken
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toManyRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toManyRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteTokenGroups:
    get:
      operationId: list-GroupInviteTokenGroups
      description: List "GroupInviteTokenGroups" resources
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/page-offset"
        - $ref: "#/components/parameters/page-limit"
        - name: filter[token]
          required: false
          description: Equality filter for "token"
          in: query
          style: form
          explode: false
          schema:
            type: string
        - name: filter[group]
          required: false
          description: Equality filter for "group"
          in: query
          style: form
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenGroupsListResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    post:
      operationId: create-GroupInviteTokenGroups
      description: Create a "GroupInviteTokenGroups" resource
      tags:
        - groupInviteTokenGroups
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupInviteTokenGroupsCreateRequest"
      responses:
        "201":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenGroupsResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteTokenGroups/{id}:
    get:
      operationId: fetch-GroupInviteTokenGroups
      description: Fetch a "GroupInviteTokenGroups" resource
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenGroupsResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GroupInviteTokenGroups-put
      description: Update a "GroupInviteTokenGroups" resource
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupInviteTokenGroupsUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenGroupsResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GroupInviteTokenGroups-patch
      description: Update a "GroupInviteTokenGroups" resource
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/GroupInviteTokenGroupsUpdateRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenGroupsResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "422":
          description: Request is unprocessable due to validation errors
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    delete:
      operationId: delete-GroupInviteTokenGroups
      description: Delete a "GroupInviteTokenGroups" resource
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteTokenGroups/{id}/token:
    get:
      operationId: fetch-GroupInviteTokenGroups-related-token
      description: Fetch the related "token" resource for "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GroupInviteTokenResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteTokenGroups/{id}/relationships/token:
    get:
      operationId: fetch-GroupInviteTokenGroups-relationship-token
      description: Fetch the "token" relationships for a "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GroupInviteTokenGroups-relationship-token-put
      description: Update "token" relationship for a "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GroupInviteTokenGroups-relationship-token-patch
      description: Update "token" relationship for a "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteTokenGroups/{id}/group:
    get:
      operationId: fetch-GroupInviteTokenGroups-related-group
      description: Fetch the related "group" resource for "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/GitGroupResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
  /api/data/groupInviteTokenGroups/{id}/relationships/group:
    get:
      operationId: fetch-GroupInviteTokenGroups-relationship-group
      description: Fetch the "group" relationships for a "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    put:
      operationId: update-GroupInviteTokenGroups-relationship-group-put
      description: Update "group" relationship for a "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
    patch:
      operationId: update-GroupInviteTokenGroups-relationship-group-patch
      description: Update "group" relationship for a "GroupInviteTokenGroups"
      tags:
        - groupInviteTokenGroups
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: "#/components/schemas/_toOneRelationshipRequest"
      responses:
        "200":
          description: Successful operation
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_toOneRelationshipResponse"
        "403":
          description: Request is forbidden
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
        "404":
          description: Resource is not found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/_errorResponse"
components:
  schemas:
    _jsonapi:
      type: object
      description: An object describing the server’s implementation
      required:
        - version
      properties:
        version:
          type: string
    _meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Superjson serialization metadata
      additionalProperties: true
    _resourceIdentifier:
      type: object
      description: Identifier for a resource
      required:
        - type
        - id
      properties:
        type:
          type: string
          description: Resource type
        id:
          type: string
          description: Resource id
    _resource:
      allOf:
        - $ref: "#/components/schemas/_resourceIdentifier"
        - type: object
          description: A resource with attributes and relationships
          properties:
            attributes:
              type: object
              description: Resource attributes
            relationships:
              type: object
              description: Resource relationships
    _links:
      type: object
      required:
        - self
      description: Links related to the resource
      properties:
        self:
          type: string
          description: Link for refetching the curent results
    _pagination:
      type: object
      description: Pagination information
      required:
        - first
        - last
        - prev
        - next
      properties:
        first:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the first page
        last:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the last page
        prev:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the previous page
        next:
          oneOf:
            - type: "null"
            - type: string
              description: Link to the next page
    _errors:
      type: array
      description: An array of error objects
      items:
        type: object
        required:
          - status
          - code
        properties:
          status:
            type: string
            description: HTTP status
          code:
            type: string
            description: Error code
          prismaCode:
            type: string
            description: Prisma error code if the error is thrown by Prisma
          title:
            type: string
            description: Error title
          detail:
            type: string
            description: Error detail
          reason:
            type: string
            description: Detailed error reason
          zodErrors:
            type: object
            additionalProperties: true
            description: Zod validation errors if the error is due to data validation
              failure
    _errorResponse:
      type: object
      required:
        - errors
      description: An error response
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        errors:
          $ref: "#/components/schemas/_errors"
    _relationLinks:
      type: object
      required:
        - self
        - related
      description: Links related to a relationship
      properties:
        self:
          type: string
          description: Link for fetching this relationship
        related:
          type: string
          description: Link for fetching the resource represented by this relationship
    _toOneRelationship:
      type: object
      description: A to-one relationship
      properties:
        data:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/_resourceIdentifier"
    _toOneRelationshipWithLinks:
      type: object
      required:
        - links
        - data
      description: A to-one relationship with links
      properties:
        links:
          $ref: "#/components/schemas/_relationLinks"
        data:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/_resourceIdentifier"
    _toManyRelationship:
      type: object
      required:
        - data
      description: A to-many relationship
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/_resourceIdentifier"
    _toManyRelationshipWithLinks:
      type: object
      required:
        - links
        - data
      description: A to-many relationship with links
      properties:
        links:
          $ref: "#/components/schemas/_pagedRelationLinks"
        data:
          type: array
          items:
            $ref: "#/components/schemas/_resourceIdentifier"
    _pagedRelationLinks:
      description: Relationship links with pagination information
      allOf:
        - $ref: "#/components/schemas/_pagination"
        - $ref: "#/components/schemas/_relationLinks"
    _toManyRelationshipRequest:
      type: object
      required:
        - data
      description: Input for manipulating a to-many relationship
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/_resourceIdentifier"
    _toOneRelationshipRequest:
      description: Input for manipulating a to-one relationship
      oneOf:
        - type: "null"
        - type: object
          required:
            - data
          properties:
            data:
              $ref: "#/components/schemas/_resourceIdentifier"
    _toManyRelationshipResponse:
      description: Response for a to-many relationship
      allOf:
        - $ref: "#/components/schemas/_toManyRelationshipWithLinks"
        - type: object
          properties:
            jsonapi:
              $ref: "#/components/schemas/_jsonapi"
    _toOneRelationshipResponse:
      description: Response for a to-one relationship
      allOf:
        - $ref: "#/components/schemas/_toOneRelationshipWithLinks"
        - type: object
          properties:
            jsonapi:
              $ref: "#/components/schemas/_jsonapi"
    User:
      type: object
      description: The "User" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: integer
        type:
          type: string
        attributes:
          type: object
          required:
            - email
            - name
            - username
            - git_access_token
            - created
            - avatar_url
          properties:
            email:
              type: string
            name:
              oneOf:
                - type: "null"
                - type: string
            username:
              oneOf:
                - type: "null"
                - type: string
            git_access_token:
              oneOf:
                - type: "null"
                - type: string
            created:
              type: string
              format: date-time
            avatar_url:
              oneOf:
                - type: "null"
                - type: string
        relationships:
          type: object
          properties:
            Notifications:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            GroupInviteTokens:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            ownedGitUsers:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            ownedGitGroups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    UserCreateRequest:
      type: object
      description: Input for creating a "User"
      required:
        - data
      properties:
        data:
          type: object
          description: The "User" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                name:
                  oneOf:
                    - type: "null"
                    - type: string
                username:
                  oneOf:
                    - type: "null"
                    - type: string
                git_access_token:
                  oneOf:
                    - type: "null"
                    - type: string
                created:
                  type: string
                  format: date-time
                avatar_url:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                Notifications:
                  $ref: "#/components/schemas/_toManyRelationship"
                GroupInviteTokens:
                  $ref: "#/components/schemas/_toManyRelationship"
                ownedGitUsers:
                  $ref: "#/components/schemas/_toManyRelationship"
                ownedGitGroups:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserUpdateRequest:
      type: object
      description: Input for updating a "User"
      required:
        - data
      properties:
        data:
          type: object
          description: The "User" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: integer
            type:
              type: string
            attributes:
              type: object
              properties:
                email:
                  type: string
                name:
                  oneOf:
                    - type: "null"
                    - type: string
                username:
                  oneOf:
                    - type: "null"
                    - type: string
                git_access_token:
                  oneOf:
                    - type: "null"
                    - type: string
                created:
                  type: string
                  format: date-time
                avatar_url:
                  oneOf:
                    - type: "null"
                    - type: string
            relationships:
              type: object
              properties:
                Notifications:
                  $ref: "#/components/schemas/_toManyRelationship"
                GroupInviteTokens:
                  $ref: "#/components/schemas/_toManyRelationship"
                ownedGitUsers:
                  $ref: "#/components/schemas/_toManyRelationship"
                ownedGitGroups:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    UserResponse:
      type: object
      description: Response for a "User"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/User"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a1
                    Notifications:
                      $ref: "#/components/schemas/_toManyRelationship"
                    GroupInviteTokens:
                      $ref: "#/components/schemas/_toManyRelationship"
                    ownedGitUsers:
                      $ref: "#/components/schemas/_toManyRelationship"
                    ownedGitGroups:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    UserListResponse:
      type: object
      description: Response for a list of "User"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/User"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a1
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    GitUser:
      type: object
      description: The "GitUser" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: integer
        type:
          type: string
        attributes:
          type: object
          required:
            - git_access_token
            - email
            - username
            - name
            - expires
            - expiryDate
            - repoState
            - created
            - avatar_url
            - custom
          properties:
            git_access_token:
              oneOf:
                - type: "null"
                - type: string
            email:
              type: string
            username:
              type: string
            name:
              type: string
            expires:
              type: boolean
            expiryDate:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            repoState:
              type: integer
            created:
              type: string
              format: date-time
            avatar_url:
              oneOf:
                - type: "null"
                - type: string
            custom:
              oneOf:
                - type: "null"
                - type: boolean
        relationships:
          type: object
          properties:
            groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            owners:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    GitUserCreateRequest:
      type: object
      description: Input for creating a "GitUser"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitUser" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - email
                - username
                - name
                - expires
                - repoState
              properties:
                git_access_token:
                  oneOf:
                    - type: "null"
                    - type: string
                email:
                  type: string
                username:
                  type: string
                name:
                  type: string
                expires:
                  type: boolean
                expiryDate:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                repoState:
                  type: integer
                created:
                  type: string
                  format: date-time
                avatar_url:
                  oneOf:
                    - type: "null"
                    - type: string
                custom:
                  oneOf:
                    - type: "null"
                    - type: boolean
            relationships:
              type: object
              properties:
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                owners:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitUserUpdateRequest:
      type: object
      description: Input for updating a "GitUser"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitUser" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: integer
            type:
              type: string
            attributes:
              type: object
              properties:
                git_access_token:
                  oneOf:
                    - type: "null"
                    - type: string
                email:
                  type: string
                username:
                  type: string
                name:
                  type: string
                expires:
                  type: boolean
                expiryDate:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                repoState:
                  type: integer
                created:
                  type: string
                  format: date-time
                avatar_url:
                  oneOf:
                    - type: "null"
                    - type: string
                custom:
                  oneOf:
                    - type: "null"
                    - type: boolean
            relationships:
              type: object
              properties:
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
                owners:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitUserResponse:
      type: object
      description: Response for a "GitUser"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/GitUser"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a2
                    groups:
                      $ref: "#/components/schemas/_toManyRelationship"
                    owners:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GitUserListResponse:
      type: object
      description: Response for a list of "GitUser"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/GitUser"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a2
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    GitGroup:
      type: object
      description: The "GitGroup" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: integer
        type:
          type: string
        attributes:
          type: object
          required:
            - expires
            - expiryDate
            - deleteUsers
            - deleteSelf
            - repoOwner
            - repoName
            - created
            - name
          properties:
            expires:
              type: boolean
            expiryDate:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            deleteUsers:
              type: boolean
            deleteSelf:
              type: boolean
            repoOwner:
              type: string
            repoName:
              type: string
            created:
              type: string
              format: date-time
            name:
              type: string
        relationships:
          type: object
          properties:
            GroupInviteTokens:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            users:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
            owners:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    GitGroupCreateRequest:
      type: object
      description: Input for creating a "GitGroup"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitGroup" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - expires
                - repoOwner
                - repoName
                - name
              properties:
                expires:
                  type: boolean
                expiryDate:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                deleteUsers:
                  type: boolean
                deleteSelf:
                  type: boolean
                repoOwner:
                  type: string
                repoName:
                  type: string
                created:
                  type: string
                  format: date-time
                name:
                  type: string
            relationships:
              type: object
              properties:
                GroupInviteTokens:
                  $ref: "#/components/schemas/_toManyRelationship"
                users:
                  $ref: "#/components/schemas/_toManyRelationship"
                owners:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitGroupUpdateRequest:
      type: object
      description: Input for updating a "GitGroup"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitGroup" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: integer
            type:
              type: string
            attributes:
              type: object
              properties:
                expires:
                  type: boolean
                expiryDate:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                deleteUsers:
                  type: boolean
                deleteSelf:
                  type: boolean
                repoOwner:
                  type: string
                repoName:
                  type: string
                created:
                  type: string
                  format: date-time
                name:
                  type: string
            relationships:
              type: object
              properties:
                GroupInviteTokens:
                  $ref: "#/components/schemas/_toManyRelationship"
                users:
                  $ref: "#/components/schemas/_toManyRelationship"
                owners:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitGroupResponse:
      type: object
      description: Response for a "GitGroup"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/GitGroup"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a3
                    GroupInviteTokens:
                      $ref: "#/components/schemas/_toManyRelationship"
                    users:
                      $ref: "#/components/schemas/_toManyRelationship"
                    owners:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GitGroupListResponse:
      type: object
      description: Response for a list of "GitGroup"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/GitGroup"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a3
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    GitUserGroup:
      type: object
      description: The "GitUserGroup" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          required:
            - userId
            - groupId
            - repoState
          properties:
            userId:
              type: integer
            groupId:
              type: integer
            repoState:
              type: integer
        relationships:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            group:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    GitUserGroupCreateRequest:
      type: object
      description: Input for creating a "GitUserGroup"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitUserGroup" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - repoState
              properties:
                repoState:
                  type: integer
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                group:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitUserGroupUpdateRequest:
      type: object
      description: Input for updating a "GitUserGroup"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitUserGroup" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties:
                repoState:
                  type: integer
            relationships:
              type: object
              properties:
                user:
                  $ref: "#/components/schemas/_toOneRelationship"
                group:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitUserGroupResponse:
      type: object
      description: Response for a "GitUserGroup"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/GitUserGroup"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a4
                    user:
                      $ref: "#/components/schemas/_toOneRelationship"
                    group:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GitUserGroupListResponse:
      type: object
      description: Response for a list of "GitUserGroup"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/GitUserGroup"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a4
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    GitUserOwner:
      type: object
      description: The "GitUserOwner" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          required:
            - ownerId
            - gitUserId
          properties:
            ownerId:
              type: integer
            gitUserId:
              type: integer
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            gitUser:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    GitUserOwnerCreateRequest:
      type: object
      description: Input for creating a "GitUserOwner"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitUserOwner" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              properties: {}
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                gitUser:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitUserOwnerUpdateRequest:
      type: object
      description: Input for updating a "GitUserOwner"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitUserOwner" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties: {}
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                gitUser:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitUserOwnerResponse:
      type: object
      description: Response for a "GitUserOwner"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/GitUserOwner"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a5
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
                    gitUser:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GitUserOwnerListResponse:
      type: object
      description: Response for a list of "GitUserOwner"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/GitUserOwner"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a5
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    GitGroupOwner:
      type: object
      description: The "GitGroupOwner" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          required:
            - ownerId
            - groupId
          properties:
            ownerId:
              type: integer
            groupId:
              type: integer
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            group:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    GitGroupOwnerCreateRequest:
      type: object
      description: Input for creating a "GitGroupOwner"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitGroupOwner" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              properties: {}
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                group:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitGroupOwnerUpdateRequest:
      type: object
      description: Input for updating a "GitGroupOwner"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GitGroupOwner" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties: {}
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                group:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GitGroupOwnerResponse:
      type: object
      description: Response for a "GitGroupOwner"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/GitGroupOwner"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a6
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
                    group:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GitGroupOwnerListResponse:
      type: object
      description: Response for a list of "GitGroupOwner"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/GitGroupOwner"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a6
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    Notification:
      type: object
      description: The "Notification" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: integer
        type:
          type: string
        attributes:
          type: object
          required:
            - title
            - content
            - read
            - created
            - ownerId
          properties:
            title:
              type: string
            content:
              type: string
            read:
              type: boolean
            created:
              type: string
              format: date-time
            ownerId:
              type: integer
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    NotificationCreateRequest:
      type: object
      description: Input for creating a "Notification"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Notification" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - title
                - content
                - read
              properties:
                title:
                  type: string
                content:
                  type: string
                read:
                  type: boolean
                created:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    NotificationUpdateRequest:
      type: object
      description: Input for updating a "Notification"
      required:
        - data
      properties:
        data:
          type: object
          description: The "Notification" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: integer
            type:
              type: string
            attributes:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                read:
                  type: boolean
                created:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    NotificationResponse:
      type: object
      description: Response for a "Notification"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/Notification"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a7
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    NotificationListResponse:
      type: object
      description: Response for a list of "Notification"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Notification"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a7
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    GroupInviteToken:
      type: object
      description: The "GroupInviteToken" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: integer
        type:
          type: string
        attributes:
          type: object
          required:
            - token
            - used
            - maxUse
            - ownerId
            - name
            - expiryDate
            - created
          properties:
            token:
              type: string
            used:
              type: integer
            maxUse:
              type: integer
            ownerId:
              type: integer
            name:
              type: string
            expiryDate:
              oneOf:
                - type: "null"
                - type: string
                  format: date-time
            created:
              type: string
              format: date-time
        relationships:
          type: object
          properties:
            owner:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            groups:
              $ref: "#/components/schemas/_toManyRelationshipWithLinks"
    GroupInviteTokenCreateRequest:
      type: object
      description: Input for creating a "GroupInviteToken"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GroupInviteToken" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              required:
                - token
                - maxUse
                - name
              properties:
                token:
                  type: string
                used:
                  type: integer
                maxUse:
                  type: integer
                name:
                  type: string
                expiryDate:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                created:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GroupInviteTokenUpdateRequest:
      type: object
      description: Input for updating a "GroupInviteToken"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GroupInviteToken" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: integer
            type:
              type: string
            attributes:
              type: object
              properties:
                token:
                  type: string
                used:
                  type: integer
                maxUse:
                  type: integer
                name:
                  type: string
                expiryDate:
                  oneOf:
                    - type: "null"
                    - type: string
                      format: date-time
                created:
                  type: string
                  format: date-time
            relationships:
              type: object
              properties:
                owner:
                  $ref: "#/components/schemas/_toOneRelationship"
                groups:
                  $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GroupInviteTokenResponse:
      type: object
      description: Response for a "GroupInviteToken"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/GroupInviteToken"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a8
                    owner:
                      $ref: "#/components/schemas/_toOneRelationship"
                    groups:
                      $ref: "#/components/schemas/_toManyRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GroupInviteTokenListResponse:
      type: object
      description: Response for a list of "GroupInviteToken"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/GroupInviteToken"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a8
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
    GroupInviteTokenGroups:
      type: object
      description: The "GroupInviteTokenGroups" model
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          required:
            - tokenId
            - groupId
          properties:
            tokenId:
              type: integer
            groupId:
              type: integer
        relationships:
          type: object
          properties:
            token:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
            group:
              $ref: "#/components/schemas/_toOneRelationshipWithLinks"
    GroupInviteTokenGroupsCreateRequest:
      type: object
      description: Input for creating a "GroupInviteTokenGroups"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GroupInviteTokenGroups" model
          required:
            - type
            - attributes
          properties:
            type:
              type: string
            attributes:
              type: object
              properties: {}
            relationships:
              type: object
              properties:
                token:
                  $ref: "#/components/schemas/_toOneRelationship"
                group:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GroupInviteTokenGroupsUpdateRequest:
      type: object
      description: Input for updating a "GroupInviteTokenGroups"
      required:
        - data
      properties:
        data:
          type: object
          description: The "GroupInviteTokenGroups" model
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
            type:
              type: string
            attributes:
              type: object
              properties: {}
            relationships:
              type: object
              properties:
                token:
                  $ref: "#/components/schemas/_toOneRelationship"
                group:
                  $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
    GroupInviteTokenGroupsResponse:
      type: object
      description: Response for a "GroupInviteTokenGroups"
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          allOf:
            - $ref: "#/components/schemas/GroupInviteTokenGroups"
            - type: object
              properties:
                relationships:
                  type: object
                  properties: &a9
                    token:
                      $ref: "#/components/schemas/_toOneRelationship"
                    group:
                      $ref: "#/components/schemas/_toOneRelationship"
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          $ref: "#/components/schemas/_links"
    GroupInviteTokenGroupsListResponse:
      type: object
      description: Response for a list of "GroupInviteTokenGroups"
      required:
        - data
        - links
      properties:
        jsonapi:
          $ref: "#/components/schemas/_jsonapi"
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/GroupInviteTokenGroups"
              - type: object
                properties:
                  relationships:
                    type: object
                    properties: *a9
        meta:
          $ref: "#/components/schemas/_meta"
        included:
          type: array
          items:
            $ref: "#/components/schemas/_resource"
        links:
          allOf:
            - $ref: "#/components/schemas/_links"
            - $ref: "#/components/schemas/_pagination"
  parameters:
    id:
      name: id
      in: path
      description: The resource id
      required: true
      schema:
        type: string
    include:
      name: include
      in: query
      description: Relationships to include
      required: false
      style: form
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: Fields to sort by
      required: false
      style: form
      schema:
        type: string
    page-offset:
      name: page[offset]
      in: query
      description: Offset for pagination
      required: false
      style: form
      schema:
        type: integer
    page-limit:
      name: page[limit]
      in: query
      description: Limit for pagination
      required: false
      style: form
      schema:
        type: integer
